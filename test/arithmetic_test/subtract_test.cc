#include "bigint.hpp"
#include <gtest/gtest.h>

TEST(Subtract, Pos) {
  BigInt a("123456789");
  BigInt b("987654321");
  BigInt diff = a - b;
  EXPECT_EQ(diff.toString(), "-864197532");
}

TEST(Subtract, Neg) {
  BigInt a("-123456789");
  BigInt b("-987654321");
  BigInt diff = a - b;
  EXPECT_EQ(diff.toString(), "864197532");
}

TEST(Subtract, PosNeg) {
  BigInt a("123456789");
  BigInt b("-987654321");
  BigInt diff = a - b;
  EXPECT_EQ(diff.toString(), "1111111110");
}

TEST(Subtract, NegPos) {
  BigInt a("-123456789");
  BigInt b("987654321");
  BigInt diff = a - b;
  EXPECT_EQ(diff.toString(), "-1111111110");
}

TEST(Subtract, Zero) {
  BigInt a(randomize(1000));
  EXPECT_EQ((a - a).toString(), "0");
}

TEST(Subtract, Large) {
  BigInt a(
      "560586723800030337258778302959367811740789264928188997884920221571512229"
      "848722055968715040808198210101578216007600251334315503660763783366893687"
      "639531380829385395316483931759554923222909252988286284445988157427945204"
      "378829684861411751489915780388437684861579819594432166481704308535181321"
      "794005817076226760710767712392934679363297885387745038422663187808045543"
      "532571640050292780588085319844001380581443623736065084203645834296932294"
      "950847029822581552436912207082210743951337090198124923352805026484265752"
      "163165694452254680490414124229738455673503562420561449112360820541177485"
      "594072513279215259152469195564417849447863864868650025754040421343663483"
      "887473391007722055211254691761136630931397149108011779936803995664366346"
      "991658461481056844362016632042399646385458399749191195666208334177489535"
      "601395399340763943850325716046695573504490489693938140532943827160652999"
      "365006356930327250636009938632280192023166904904692738662670729212786505"
      "8440964604293676272396348908047268696250349701269556653831929088");
  BigInt b(
      "-81523075586856252103745890250793733032997133369603217115671215815298358"
      "674421216151877609072585916889651995168132170096181707423149839763359444"
      "013873410591073347855681662075460994202235728196546068519168806322264909"
      "354099177913045282950704344030053601493852867749588634705663329800770714"
      "836190412830023075919964456652640735689847125158796885471752862006318596"
      "220571034587304851057758415934906272415147583092299345085151040013275258"
      "629414317009974146293712438063490028979587745291184280218206687291647404"
      "314425074511117355526040063066357636240434661260515893532555660159165798"
      "886072659007799138207878881978144089153090666691516312736800043704112406"
      "204072441889146524837086072068426983554688852703982852187384475107658354"
      "537197580584621412613344298834191595370489224650594623073481503716438344"
      "522671437868016243785692325363556259888810633507264623562506199647275623"
      "7816703244610632434312695262630688534");
  BigInt diff = a - b;
  EXPECT_EQ(
      diff.toString(),
      "560586723800030337258778302959367811740789264928188997884920221571512229"
      "848722055968715040808198210183101291594456503438061393911557516399890821"
      "009134597945056611131782290433976139374786862060872201335640152596077374"
      "475011392284561591253275224402311095452653167450113828557165302737417049"
      "990551885595395567033032621747033857276343168338449382452716789301898411"
      "282160274755956110388856034680191793411466699656029540856286569986779420"
      "109643915294334414443230803302781778538641941255883339287711298899413335"
      "255465039537405720503689382859152772683477708714273887175850849520765230"
      "885256793497421946444116599878842923958981220394690088820398057584098145"
      "147989284540277715370420490647209289939196287315890661914948084817457013"
      "683174774217856888066129038246472088274604924586277267734635317732178388"
      "305378251528148418957984070583893154089111902307282439367135422531142224"
      "015600980003808754352448283154951629891183148690385064026226989101597139"
      "3513610839918738268869105145863971940860982135582251916462617622");
}